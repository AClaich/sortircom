security:
  encoders:
    App\Entity\User:
      algorithm: argon2i
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    chain_provider:
      chain:
        providers: [db_username, db_mail]
    db_username:
      entity:
        class: App\Entity\User
        property: username
    db_mail:
      entity:
        class: App\Entity\User
        property: mail
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      pattern: ^/
      provider: chain_provider
      anonymous: ~
      form_login:
        login_path: login
        check_path: login
        default_target_path: redirection_after_login
      remember_me:
        secret:   '%kernel.secret%'
        lifetime: 604800 # 1 week in seconds
        path:     /
      logout_on_user_change: true
      logout:
        path: logout
        target: login

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  role_hierarchy:
    ROLE_ADMIN:   ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
    - { path: ^/deactivated, roles: ROLE_DEACTIVATED}
    - { path: ^/redictionafterlogin, roles: [ROLE_DEACTIVATED, ROLE_USER]}
    - { path: ^/, roles: ROLE_USER }
